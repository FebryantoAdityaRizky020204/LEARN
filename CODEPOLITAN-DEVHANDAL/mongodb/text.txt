Mongo -> Database berbasis document
? Kenapa perlu menggunakan database
    -> dapat meyimpan banyak data dan dikumpulkan secara efisien
    -> tools yang memiliki fungsi query untuk kelola data, membuat dan mengubah
    -> menyediakan fitur keamanan dan kendali akses data
    -> umumnya dapat menampung skala data dengan baik

SQL VS NoSQL
? SQL
    -> Structured Query Languange databasem adalah database yang berelasi,
        dimana ita mendefinisikan skema tabel terlebih dahulu sebelum data
        ini akan kita simpan didalamnya.
? NoSQL
    -> NoSQL tidak menggunakan SQL
    -> Jenisnya banyak
    -> salah satunya berbentuk dokumen dan memiliki
        key-value, graph store

Popular Database
SQL
    -> MySQL
    -> postgres
    -> SQLite
    -> Oracle
    -> Microsoft SQL
NoSQL
    -> MongoDB
    -> CouchDB
    -> Neo4j
    -> Cassandra
    -> Redis

!Kenapa Belajar MongoDB
    -> MongoDB sering digunakan dengan project Node dan ExpressJS (eg: MEAN, MERN)
    -> mudah untuk mempelajarinya
    -> cocok banget buat projek Javascript
    -> Popular, Artinya banyak komunitas dan panduan kalo kita mengalami kendala


Cara Menginstall
    -> Download MongoDB di [https://www.mongodb.com/try/download/community]
    -> kemudian download shell tools di [https://www.mongodb.com/try/download/shell]
        -> download file msi nya jika ingin file installer
        -> download zip jika ingin integrasi manual
           karena ingin ditambahkan ke laragon download file zip nya, tutorial cari di youtube

JSON and BSON
    [https://www.mongodb.com/resources/basics/json-and-bson]
    

Perintah Insert di MongoDB
    use sample_db
    db.products.insertOne({name: "Produk A Plusls", price: 1000, tags: ["smartphone", "gadget"]})
    db.products.find()
    db.products.insertMany([{name: "Produk A Plusls", price: 1000, tags: ["smartphone", "gadget"]}, {name: "Produk A Plusls", price: 1000, tags: ["smartphone", "gadget"]}, {name: "Produk A Plusls", price: 1000, tags: ["smartphone", "gadget"]}])
    db.products.find()

Perintah Find dan FindOne di MongoDB
    gunakan sample-data ini [https://github.com/lunadiotic/sample-data/blob/main/products.json]
    kemudian convert ke json satu line menggunakan [https://www.text-utils.com/json-formatter/]
    db.products.insertMany("pastekan hasil json-formatter one line nya")
    db.products.find({color: 'hitam'})
    db.products.find({color: { $in : ['hitam', 'abu-abu'] } })
    db.products.findOne({color: 'hitam'})

Perintah UpdateOne dan UpdateMany
    db.products.updateOne({name: "Produk A Plusls"}, { $set: {name: "Product A Plus" } })
    db.products.find()
    db.products.updateMany({name: "Produk A Plusls"}, { $set: {name: "Product A Plus" } })
    db.products.find()
    db.products.updateOne({name: 'Product A Plus'}, { $set: { "avaiability.offline": true, "avaiability.online": true   } })
    db.products.find({name: 'Product A Plus'})
    db.products.updateMany({name: 'Product A Plus'}, { $set: { "avaiability.offline": true, "avaiability.online": true   } })
    db.products.find({name: 'Product A Plus'})

Perintah DeleteOne dan DeleteMany
    db.products.find({name: 'Product A Plus'})
    db.products.deleteOne({name: 'Product A Plus'})
    db.products.find({name: 'Product A Plus'})
    db.products.deleteMany({name: 'Product A Plus'})
    db.products.find({name: 'Product A Plus'}) // data sudah tidak ada
    db.products.deleteMany({"avaiability.offline": false})

Beberapa Query Operator yang perlu Dicoba
    db.products.find({ price : { $lt : 500000 } }) // $lt = less than, $lte = less than equal, $gt, $gte

